name: Build and Test Django

on:
  push:
    branches:
      - entrega
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ALLOWED_HOSTS: "*"
      USE_SQLITE: "True"
      DB_ENGINE_LOCAL: "django.db.backends.sqlite3"
      DB_HOST_LOCAL: ""
      DB_NAME_LOCAL: "sqlite3.db"
      DB_USER_LOCAL: ""
      DB_PASSWORD_LOCAL: ""
      DB_PORT_LOCAL: ""
      DB_ENGINE_TEST: "django.db.backends.sqlite3"
      DB_HOST_TEST: ""
      DB_NAME_TEST: "sqlite3.db"
      DB_PASSWORD_TEST: ""
      DB_PORT_TEST: ""
      DB_USER_TEST: ""
      DB_ENGINE_PRODUCTION: "django.db.backends.postgres"
      DB_HOST_PRODUCTION: ""
      DB_NAME_PRODUCTION: ""
      DB_PASSWORD_PRODUCTION: ""
      DB_PORT_PRODUCTION: ""
      DB_USER_PRODUCTION: ""
      DEBUG: "True" 
      DEFAULT_FROM_EMAIL: "xxxxxxx@xxxx.com"
      HASHIDS_SALT: "hA8(scA@!fg3*sc&xaGh&6%-l<._&xCf,"
      DJANGO_SETTINGS_MODULE: "vepema-modulo-1.settings.local"
      URL_VALIDATION: ""
      URL: ""
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      EMAIL_HOST: ""
      EMAIL_HOST_PASSWORD: ""
      EMAIL_HOST_USER: ""
      EMAIL_PORT: 587
      EMAIL_USE_TLS: "True"
      TEST_URL: http://localhost:8000  

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          pwd
          cd main
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-json-report pytest-metadata pytest-django pytest-cov

      - name: Migrate Database
        run: |
          pwd
          cd main
          python manage.py migrate --noinput

      - name: Run Server and Tests
        run: |
          pwd
          cd main
          python manage.py makemigrations
          python manage.py check
          python manage.py migrate --noinput && gunicorn vepema-modulo-1.wsgi:application --bind 0.0.0.0:8000  --error-logfile - &


          cd apps
          cd socialentity
          cd test
          cd unit
          pip install pytest pytest-json-report pytest-metadata pytest-django
          pytest entities_crud_test.py 
          pytest relatorio_acompanhar_prestadores_test.py 
          pytest cadastro_and_login_test.py

          cd ../../../ 
          cd encaminhamento/test/unit 
          pytest entities_crud_test.py 

          cd ../../../ 
          cd atendimento/test/unit 
          pytest entities_crud_test.py -s

          cd ../../../ 
          cd alocacao/test/unit 
          pytest entities_crud_test.py -s

          #python manage.py test --coverage --cov-report xml:../coverage.xml --pdb -vv
          
      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}




