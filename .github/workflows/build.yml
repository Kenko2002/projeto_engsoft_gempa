name: Build and Test Django

on:
  push:
    branches:
      - main
      - entrega
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          cd main
          pip install -r requirements.txt
          pip install pytest pytest-json-report
          cd .. # Voltar para o diretório raiz

      - name: Migrate Database
        run: |
          cd main
          python manage.py migrate --noinput
          cd .. # Voltar para o diretório raiz
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/mydatabase
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

      - name: Run Server
        env:
          EMAIL_HOST: ""        
          EMAIL_HOST_PASSWORD: ""
          DATABASE_URL: ""
          SECRET_KEY: ""
        run: |
          cd main # Entrar no diretório main
          python manage.py migrate --noinput && gunicorn myproject.wsgi:application --bind 0.0.0.0:8000 &
          cd .. # Voltar para o diretório raiz (opcional, mas boa prática)


      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}